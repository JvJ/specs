
#+TITLE:Cross-Map Development Todo List 



- [-] Persistent Cross Map

  - [-]  Cross-platform:
    - [X] API wrappers
    - [ ] Introduce cross-platform error function/macro in util
    - [X] Create helper function for cross-rows and cross-cols
    - [ ] Create a helper function for double-cross
    - [ ] Transient helper functions (if necessary)
  - [-] CLJ version
    - [X] Stubs
    - [X] Port implementation
    - [X] crossIndexRows and crossIndexColumns
    - [X] row-column cross-indexing
    - [ ] Transient implementation
  - [-] CLJS version
    - [X] Stubs 
    - [ ] Make separate implementation based on PersistentHashMap
    - [ ] Transient implementation
  - [-] Test
    - [-] Write comprehensive tests
      - [X] Write a slow function to produce the same output as crosing
      - [ ] Include tests with pair-indices
      - [ ] Include tests with non-pair indices
    - [ ] Test on both CLJ and CLJS platforms
  - [ ] Misc
    - [ ] Function that outputs to CSV (tab-separated or filter out commas)


  


* Test-Map as Row/Column Table

** Original
  | / | :a   | :b   | :c   | :d   | :e   | :f   | :g   | :h   | :i   | :j   |
  |---+------+------+------+------+------+------+------+------+------+------|
  | 0 | :a_0 | :b_0 | :c_0 | :d_0 | :e_0 | :f_0 | :g_0 | :h_0 | :i_0 | :j_0 |
  | 1 | :a_1 | :b_1 | :c_1 | :d_1 | :e_1 | :f_1 | :g_1 | :h_1 | :i_1 | :j_1 |
  | 2 | :a_2 | :b_2 | :c_2 | :d_2 | :e_2 | :f_2 | :g_2 | :h_2 | :i_2 | :j_2 |
  | 3 | :a_3 | :b_3 | :c_3 | :d_3 | :e_3 | :f_3 | :g_3 | :h_2 | :i_3 | :j_3 |
  | 4 | :a_4 | :b_4 | :c_4 | :d_4 | :e_4 | :f_4 | :g_4 | :h_4 | :i_4 | :j_4 |
  | 5 | :a_5 | :b_5 | :c_5 | :d_5 | :e_5 | :f_5 | :g_5 | :h_5 | :i_5 | :j_5 |
  | 6 | :a_6 | :b_6 | :c_6 | :d_6 | :e_6 | :f_6 | :g_6 | :h_6 | :i_6 | :j_6 |
  | 7 | :a_7 | :b_7 | :c_7 | :d_7 | :e_7 | :f_7 | :g_7 | :h_7 | :i_7 | :j_7 |
  | 8 | :a_8 | :b_8 | :c_8 | :d_8 | :e_8 | :f_8 | :g_8 | :h_8 | :i_8 | :j_8 |
  | 9 | :a_9 | :b_9 | :c_9 | :d_9 | :e_9 | :f_9 | :g_9 | :h_9 | :i_9 | :j_9 |

** Removals
   ([2,:c],[2,:e],[4,:f],[6,:b],[7,:c],[7,:f])

** After Removals
  |   / | :a   | :b    | *:c*  | *:d*   | *:e*  | :f    | :g   | :h   | :i   | :j    |
  |-----+------+-------+-------+--------+-------+-------+------+------+------+-------|
  |   0 | :a_0 | :b_0  | :c_0  | :d_0   | :e_0  | :f_0  | :g_0 | :h_0 | :i_0 | :j_0  |
  |   1 | :b_1 | :b_1  | :c_1  | :d_1   | :e_1  | :f_1  | :g_1 | :h_1 | :i_1 | :j_1  |
  |   2 | :a_2 | :b_2  | *nil* | *nil*  | *nil* | :f_2  | :g_2 | :h_2 | :i_2 | :j_2  |
  | *3* | :a_3 | :b_3  | :c_3  | :d_3   | :e_3  | :f_3  | :g_3 | :h_2 | :i_3 | *nil* |
  | *4* | :a_4 | :b_4  | :c_4  | *:d_4* | :e_4  | *nil* | :g_4 | :h_4 | :i_4 | *nil* |
  | *5* | :a_5 | :b_5  | :c_5  | :d_5   | :e_5  | :f_5  | :g_5 | :h_5 | :i_5 | *nil* |
  | *6* | :a_6 | *nil* | :c_6  | :d_6   | :e_6  | :f_6  | :g_6 | :h_6 | :i_6 | *nil* |
  |   7 | :a_7 | :b_7  | *nil* | :d_7   | :e_7  | *nil* | :g_7 | :h_7 | :i_7 | :j_7  |
  |   8 | :a_8 | :b_8  | :c_8  | :d_8   | :e_8  | :f_8  | :g_8 | :h_8 | :i_8 | :j_8  |
  |   9 | :a_9 | :b_9  | :c_9  | :d_9   | :e_9  | :f_9  | :g_9 | :h_9 | :i_9 | :j_9  |
  
  Note: Highlighted rows and columns will be used to test cross operations.
  :d_4 is dissociated for certain tests

** First test: Cross Rows and Columns
   - [X] Cross-rows
     - [X] Default
     - [X] Any-row
     - [X] Every-row
     - [X] Keys-only
     - [X] Vals-only
   - [X] Cross-cols
     - [X] Default
     - [X] Any-col
     - [X] Every-col
     - [X] Keys-only
     - [X] Vals-only
   - [ ] Cross
     - [ ] Default
     - [ ] Any-row
     - [ ] Every-row
     - [ ] Any-col
     - [ ] Every-col
     - [ ] Keys-only
     - [ ] Vals-only
     - [ ] By-rows
     - [ ] By-cols

  

** Expected results from operations


